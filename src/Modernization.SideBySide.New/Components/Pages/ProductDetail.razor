@page "/products/{id:guid}"
@using Modernization.BackendClient
@using Modernization.BackendClient.Model
@using Modernization.SideBySide.New.Services
@inject ApiClient apiClient
@inject ProductPriceCacheService productPriceCacheService
@inject SelectedCurrencyService selectedCurrencyService

<PageTitle>Contoso Shop Product</PageTitle>

<div class="row">
    @if (Product is not null && ProductPrice is not null)
    {
        <div class="col col-md-4">
            <img src="@Product.ImageUrl" alt="@Product.Name" class="img-fluid"/>
        </div>

        <div class="col col-md-8">

            <h2>@Product.Name</h2>
            <p class="mb-4">
                <i class="bi bi-star-fill"></i>
                <i class="bi bi-star-fill"></i>
                <i class="bi bi-star-fill"></i>
                <i class="bi bi-star-fill"></i>
                <i class="bi bi-star"></i>
            </p>
            <p class="lead">@Product.Description</p>
            <h4 class="mb-4">
                @ProductPrice
            </h4>
            <hr/>

            <div class="row mt-4">
                <div class="col">
                    <div class="mb-3">
                        <label for="StockLiteral" class="form-label">Availability</label>
                        <input id="StockLiteral" value="In stock" readonly
                               class="form-control-plaintext fw-bold text-success"/>
                    </div>
                </div>
                <div class="col">
                    <div class="mb-3">
                        <label for="QuantityTextBox" class="form-label">Quantity</label>
                        <input type="number" id="QuantityTextBox"
                               class="form-control" style="width: 5em"
                               value="1"/>
                    </div>
                </div>
                <div class="col text-end">
                    <input type="submit"
                           value="Add to cart"
                           class="btn btn-primary btn-lg"/>
                </div>
            </div>
        </div>
    }
</div>

@code
{
    [Parameter]
    public Guid Id { get; set; }

    public ProductModel? Product { get; set; }

    public string? ProductPrice { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Product = await apiClient.GetProductAsync(Id);
        ProductPrice = await productPriceCacheService.GetProductPriceWithCaching(Product.Id, selectedCurrencyService.SelectedCurrency);

        await base.OnInitializedAsync();
    }
}
